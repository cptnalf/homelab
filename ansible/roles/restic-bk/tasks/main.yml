# copy script files from... somewhere?
# maybe bundle a release on pegasus/releases
# env.sh config via vars, setup default?
# script systemd daemon-reload
# script enable for systemd timer.
# script start for timer.

# backup dirs are configured on the host.
# use resticbk_backup_list

- name: check if restic config dir exists
  tags:
    - restic-bk.configdir
  stat:
    path: "{{ resticbk_config }}"
  register: configdir

- name: check if installing a different version of restic-bk
  tags:
    - restic-bk
  command: "grep -Fxq {{ resticbk_version }} {{ resticbk_config }}/.resticbk-version"
  ignore_errors: true
  register: checksum

- name: determine if restic-bk should be installed
  tags:
    - restic-bk
  set_fact:
    resticbk_install: not configdir.stat.exists or (checksum.rc != 0) or (resticbk_force is defined)

- name: create restic config dir.
  tags:
    - restic-bk.configdir.create
  file:
    path: "{{ resticbk_config }}"
    state: directory
    mode: 0755
  when: not configdir.stat.exists

- name: check if password file exists.
  stat:
    path: "{{ resticbk_config }}/{{ resticbk_pw_file }}"
  register: resticbk_pw_file_check

# password file, probably doesn't need to be recreated each time, but *shrug*
- name: create restic pw file.
  tags:
    - restic
  when: not resticbk_pw_file_check.stat.exists
  template:
    src: resticpw.j2
    dest: "{{ resticbk_config }}/{{ resticbk_pw_file }}"
    mode: 0600
    owner: root
    group: root

# this is a user-configurable file, should probably have some defaults configured?
- name: create restic backup list
  tags:
    - restic
  template:
    src: backup_list.j2
    dest: "{{ resticbk_config }}/backup_list"
    owner: root
    group: root
    mode: 0644

- name: create restic exclude list
  tags:
    - resticbk.exclude.file
  template:
    src: excludes.j2
    dest: "{{ resticbk_config }}/excludes"
    owner: "root"
    group: "root"
    mode: 0644

- name: create resticbk config
  tags:
    - resticbk_config
  template:
    src: env.sh.j2
    dest: "{{ resticbk_config }}/env.sh"
    mode: 0600
    owner: root
    group: root

- name: download and checksum resticbk scripts
  tags:
    - resticbk
  when: resticbk_install
  get_url:
    url: "{{ resticbk_url }}"
    dest: "{{ resticbk_bundle }}"

- name: unpack resticbk scripts/files.
  tags:
    - resticbk
  when: resticbk_install
  unarchive:
    src: "{{ resticbk_bundle }}"
    dest: /tmp
    copy: false

- name: resticbk install services.
  tags:
    - resticbk.install
  when: resticbk_install
  command: "cp /tmp/resticbk/{{ item }} /etc/systemd/system/"
  loop: "{{ resticbk_systemd_services }}"

- name: resticbk set executable flag.
  tags:
    - resticbk.exec.flags
  when: resticbk_install
  command: "chmod a+x /tmp/resticbk/{{ item }}"
  loop: "{{ resticbk_shellscripts }}"

- name: resticbk copy scripts.
  tags:
    - resticbk.install.scripts
  when: resticbk_install
  command: "cp /tmp/resticbk/{{ item }} /usr/local/bin/"
  loop: "{{ resticbk_shellscripts }}"

- name: check if cache-dir exists
  tags:
    - resticbk
  stat:
    path: "/var/cache/restic"
  register: resticbk_cache_dircheck

- name: create cache-dir if not exists
  tags:
    - resticbk.cache.dir
  when: not resticbk_cache_dircheck.stat.exists
  file:
    path: "/var/cache/restic"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: check if restic-backup service exists
  tags:
    - resticbk
  stat:
    path: "/etc/systemd/system/restic-backup.timer"
  register: resticbk_backup_timer

- name: update back time.
  tags:
    - resticbk
  when: resticbk_backup_timer.stat.exists
  replace:
    path: "/etc/systemd/system/restic-backup.timer"
    regexp: 'OnCalendar=.+$'
    replace: 'OnCalendar=*-*-* {{ resticbk_timer_time }}'

- name: start resticbk timer.
  tags:
    - resticbk
  when: resticbk_backup_timer.stat.exists
  systemd:
    daemon_reload: yes
    name: restic-backup.timer
    state: started
    enabled: yes

- name: create version file for resticbk {{ resticbk_version }}
  tags:
    - restic-bk
  when: resticbk_install
  template:
    src: resticbk_version.j2
    dest: "{{ resticbk_config }}/.resticbk-version"
