---
- name: check config directory
  tags:
    - node_exporter
  stat:
    path: "{{ node_exporter_config }}"
  register: node_exporter_config_res

- name: check sha256 exists
  tags:
    - node_exporter
  stat:
    path: "{{ node_exporter_config }}/.sha256"
  register: node_exporter_sha256_res

- name: create node_exporter directory.
  tags:
    - node_exporter
  when: not node_exporter_config_res.stat.exists
  file:
    path: "{{ node_exporter_config }}"
    state: directory
    mode: 0755

- name: check if installing a different version of node_exporter
  tags:
    - node_exporter
  command: "grep -Fxq {{ node_exporter_sha256 }} {{ node_exporter_config }}/.sha256"
  ignore_errors: true
  register: checksum
  when: node_exporter_sha256_res.stat.exists

- name: determine if node_exporter {{ node_exporter_version }} should be installed
  tags:
    - node_exporter
  set_fact:
    node_exporter_install: false == node_exporter_sha256_res.stat.exists or (checksum.rc != 0) or (node_exporter_force is defined)

- name: download and checksum node_exporter {{ host_golang_arch }} binary
  tags:
    - node_exporter
  when: node_exporter_install
  get_url:
    url: "{{ node_exporter_url }}"
    dest: "{{ node_exporter_tgz }}"
    checksum: "sha256:{{ node_exporter_sha256 }}"

- name: unpack node_exporter tarball
  tags:
    - node_exporter
  when: node_exporter_install
  unarchive:
    src: "{{ node_exporter_tgz }}"
    dest: "/tmp/"
    copy: false
  
- name: create node_exporter user
  tags:
    - node_exporter
  when: node_exporter_install
  user:
    name: node_exporter
    shell: "/bin/false"
    comment: "node_exporter service user"

- name: check if node_exporter service exists
  tags:
    - node_exporter
  stat:
    path: "/etc/systemd/system/node_exporter.service"
  register: checked

- name: shell to stop node_exporter if it exists
  tags:
    - node_exporter
  when: checked.stat.exists
  shell: systemctl stop node_exporter

- name: enable node_exporter if it exists.
  tags:
    - node_exporter
  when: checked.stat.exists
  service:
    enabled: true
    name: node_exporter.service

#- name: stop node_exporter if it exists
#  tags:
#    - node_exporter
#  when: checked.stat.exists
#  service:
#    name: node_exporter.service
#    state: stopped

- name: copy node_exporter binary to {{ host_bin_path }}
  tags:
    - node_exporter
  when: node_exporter_install
  command: "cp /tmp/{{ node_exporter_dir }}/node_exporter {{ host_bin_path }}/"

- name: set permission on node_exporter binary
  tags:
    - node_exporter
  when: node_exporter_install
  file:
    path: "{{ host_bin_path }}/node_exporter"
    owner: node_exporter
    group: node_exporter
    mode: 0755

- name: create node_exporter config directory
  tags:
    - node_exporter
  when: node_exporter_install
  file:
    path: "{{ node_exporter_config }}"
    state: directory
    owner: node_exporter
    group: node_exporter
    mode: 0755

- name: create node_exporter options unit
  tags:
    - node_exporter
  template:
    src: node_exporter.j2
    dest: "{{ node_exporter_config }}/options"

- name: create node_exporter systemd unit
  tags:
    - node_exporter
  when: not checked.stat.exists
  template:
    src: node_exporter.service.j2
    dest: "/etc/systemd/system/node_exporter.service"

- name: reload systemd configurations
  tags:
    - node_exporter
  command: "systemctl daemon-reload"

- name: create node_exporter textfile collector directory
  tags:
    - node_exporter
  when: node_exporter_use_textfile
  file:
    path: "{{ node_exporter_textfile_dir }}"
    state: directory
    owner: node_exporter
    group: node_exporter
    mode: 0755

- name: download textfile collector scripts
  tags:
    - node_exporter
  when: node_exporter_use_textfile
  get_url:
    url: "{{ item }}"
    dest: "{{ node_exporter_textfile_dir }}/"
    mode: 0744
  with_items:
    - "https://raw.githubusercontent.com/prometheus-community/node-exporter-textfile-collector-scripts/master/smartmon.sh"

- name: set cron PATH entries for scripts
  tags:
    - node_exporter
  when: node_exporter_use_textfile
  cron:
    name: PATH
    env: true
    job: "/usr/local/sbin:{{ host_bin_path }}:/usr/sbin:/usr/bin:/sbin:/bin"

- name: enable textfile collector cronjobs
  tags:
    - node_exporter
  when: node_exporter_use_textfile
  cron:
    name: "{{ item }}"
    minute: "*"
    user: root
    job: "{{ node_exporter_textfile_dir }}/{{ item }} > {{ node_exporter_textfile_dir }}/{{ item }}.prom"
  with_items:
    - "smartmon.sh"

- name: reload systemctl node_exporter service
  tags:
    - node_exporter
  shell: systemctl daemon-reload

- name: start node_exporter service
  tags:
    - node_exporter
  shell: systemctl start node_exporter

# not working for aarch64, neopi 3
#- name: start node_exporter service
#  tags:
#    - node_exporter
#  systemd:
#    daemon_reload: true
#    name: node_exporter
#    state: started
#    enabled: true

# @todo bare-variable warning.
- name: remove temporary node_exporter files
  tags:
    - node_exporter
  when: node_exporter_install
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/tmp/{{ node_exporter_dir }}"
    - "{{ node_exporter_tgz }}"

- name: create checksum file for node_exporter {{ node_exporter_version }}
  tags:
    - node_exporter
  when: node_exporter_install
  template:
    src: sha256.j2
    dest: "{{ node_exporter_config }}/.sha256"
  