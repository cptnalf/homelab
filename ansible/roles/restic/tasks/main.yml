---
- name: check if installing a different version of restic
  tags:
    - restic
  command: "grep -Fxq {{ restic_sha256 }} {{ host_bin_path }}/.restic.sha256"
  ignore_errors: true
  register: checksum

- name: determine if restic {{ restic_version }} should be installed
  tags:
    - restic
  set_fact:
    restic_install: (not configdir.stat.exists) or (checksum.rc != 0) or (restic_force is defined)

- name: download and checksum restic {{ host_golang_arch }} binary
  tags:
    - restic
  when: restic_install
  get_url:
    url: "{{ restic_url }}"
    dest: "{{ restic_bz2 }}"
    checksum: "sha256:{{ restic_sha256 }}"

- name: clear temporary restic files
  tags:
    - restic
  when: restic_install
  file:
    path: "/tmp/restic"
    state: absent

- name: unpack restic binary.
  tags:
    - restic
  when: restic_install
  command: "bunzip2 {{ restic_bz2 }}"
  
- name: create restic user
  tags:
    - restic
  when: restic_install
  user:
    name: restic
    shell: "/bin/false"
    comment: "restic backup user"

- name: copy restic binary to {{ host_bin_path }}
  tags:
    - restic
  when: restic_install
  command: "cp /tmp/restic {{ host_bin_path }}/"

- name: set permission on restic binary
  tags:
    - restic
  when: restic_install
  file:
    path: "{{ host_bin_path }}/restic"
    owner: root
    group: root
    mode: 0755

- name: remove temporary restic files
  tags:
    - restic
  when: restic_install
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/tmp/{{ restic_dir }}"

- name: create checksum file for restic {{ restic_version }}
  tags:
    - restic
  when: restic_install
  template:
    src: sha256.j2
    dest: "{{ host_bin_path }}/.restic.sha256"
  