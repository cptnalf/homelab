---
- name: add buster-backports apt repository (for wireguard)
  tags:
    - coraldev
  apt_repository:
    repo: "deb http://debian.gtisc.gatech.edu/debian buster-backports main contrib"
    state: present

- name: update package lists
  tags:
    - coraldev
  apt:
    update_cache: true

- name: install stuff
  tags:
    - coraldev
  apt:
    pkg: ['btrfs-progs', 'mosquitto', 'resolvconf', 'linux-headers-4.14.98-imx', 'wireguard', 'sqlite3']
    state: present

- name: check docker daemon config exists.
  tags:
    - coraldev
  stat:
    path: "/etc/docker/daemon.json"
  register: config_file

- name: install my configs
  tags:
    - coraldev
  copy:
    src: "configs/docker_daemon.json"
    dest: "/etc/docker/daemon.json"
    owner: "root"
    group: "root"
    mode: 0644
  when: not config_file.stat.exists

- name: copy kresd conf.
  tags:
    - coraldev
  copy:
    src: "configs/kresd.conf"
    dest: "/etc/knot-resolver/kresd.conf"
    owner: "root"
    group: "root"
    mode: 0644

- name: check mosquitto listener config exists.
  tags:
    - coraldev
  stat:
    path: "/etc/mosquitto/conf.d/listener.conf"
  register: coraldev_mosquittoconfig_file

- name: install mosquitto listener config
  tags:
    - coraldev
  copy:
    src: "configs/mosquitto_listen.conf"
    dest: "/etc/mosquitto/conf.d/listener.conf"
    owner: "root"
    group: "root"
    mode: 0644
  when: not coraldev_mosquittoconfig_file.stat.exists

- name: update groups.
  tags:
    - coraldev.mendel.groups
  user:
    name: mendel
    shell: /bin/bash
    update_password: on_create
    password: "$6$ZQtWTflwV.nDDg$2gUQUzq5WWrfb7hg7pIzMqwQ2uBWyPGLteDnSG2wTe2A4nAB3jvp7WRcXpvdQHTUcx6G46ZORL1jelFtlwXSk/"
    groups: mendel,adm,sudo,audio,video,plugdev,staff,games,users,netdev,input,render,i2c,systemd-journal,bluetooth,apex,docker
    append: yes

- name: check sdcard dir
  tags:
    - coraldev
  stat:
    path: /sdcard
  register: sdcard_res

- name: make sdcard dir.
  tags:
    - coraldev
  when: not sdcard_res.stat.exists
  file:
    path: /sdcard
    mode: 0755
    state: directory
    owner: "root"
    group: "root"

- name: add sdcard to fstab.
  tags:
    - coraldev
  mount:
    path: /sdcard
    src: /dev/mmcblk1p1
    fstype: btrfs
    opts: defaults
    state: present

- name: check usbdrive dir.
  tags:
    - coraldev
  stat:
    path: /usbdrive
  register: coraldev_usbdrive_res

- name: make usbdrive dir.
  tags:
    - coraldev
  when: not coraldev_usbdrive_res.stat.exists
  file:
    path: /usbdrive
    mode: 0755
    state: directory
    owner: "root"
    group: "root"

- name: add usbdrive to fstab.
  tags:
    - coraldev
  mount:
    path: /usbdrive
    src: "{{ coraldev_usbdrive_device }}"
    fstype: btrfs
    opts: "defaults,nofail"
    state: mounted

- name: add usbdrive's 2nd part.
  tags:
    - coraldev.swap_part
  mount:
    path: /srv
    src: "{{ coraldev_usbdrive_swappart }}"
    fstype: ext4
    opts: "defaults,nofail"
    state: mounted

- name: check if swap file exists.
  stat:
    path: "{{ coraldev_swap_file }}"
  register: coraldev_swap_file_check

- name: create a backup-swap file on the usbdrive
  tags:
    - coraldev
  become: yes
  command: dd if=/dev/zero bs=1024 count={{ coraldev_swap_size }}k of={{ coraldev_swap_file }}
    creates="{{ coraldev_swap_file }}"
  when: not coraldev_swap_file_check.stat.exists

- name: set swapfile perms
  tags:
    - coraldev.swap.perms
  file:
    path: "{{ coraldev_swap_file }}"
    owner: "root"
    group: "root"
    mode: 0600

- name: make swap.
  tags:
    - coraldev.swap.mkswap
  become: yes
  command: "mkswap {{ coraldev_swap_file }}"
  when: not coraldev_swap_file_check.stat.exists

- name: write swap entry to fstab
  tags:
    - coraldev.swap.fstab
  mount:
    name: none
    src: "{{ coraldev_swap_file }}"
    fstype: swap
    opts: sw
    passno: 0
    dump: 0
    state: present

- name: mount swap
  become: yes
  command: "swapon -a "
  when: not coraldev_swap_file_check.stat.exists
  tags:
    - coraldev.swap.swapon


#- name: start docker service
#  tags:
#    - docker
#  service:
#    name: docker.service
#    state: started
#    enabled: true
# http://192.168.9.51/flv?port=1935&app=bcs&stream=channel0_main.bcs&user=captainalf&password=1234567890