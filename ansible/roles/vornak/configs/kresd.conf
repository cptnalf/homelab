-- vim:syntax=lua:
-- Refer to manual: http://knot-resolver.readthedocs.org/en/latest/daemon.html#configuration


-- See kresd.systemd(7) about configuring network interfaces when using systemd
net.listen('127.0.0.1', 53, {kind = 'dns' })
net.listen('::1', 53, {kind = 'dns' })
net.listen('192.168.9.15', 53, {kind = 'dns'})
net.listen('192.168.9.15', 8053, {kind= 'webmgmt'})

user('knot-resolver', 'knot-resolver')

-- Load useful modules
modules = {
  'policy'   -- Block queries to local zones/bad sites
  ,'hints'    -- Load /etc/hosts and allow custom root hints
  ,'stats'    -- Track internal statistics
  ,'predict'  -- Prefetch expiring/frequent records
  ,'serve_stale < cache'
  ,'workarounds < iterate'
}

-- Cache size
cache.size = 500 * MB

-- dnssec validation
-- trust_anchors.file = '/usr/share/dns/root.key'
-- turn off dnssec validation
--  apparently some domains can't do it.
-- trust_anchors.remove('.')

-- fallback policy, enable if below doesnt work.
-- policy.add(policy.all(policy.FORWARD({ '1.1.1 1' }) ) )
-- '66.18.32.2','1.1.1.1','8.8.8.8'})))

-- forward to cloudflare tls.
policy.add(policy.all(policy.TLS_FORWARD({

  { '8.8.8.8', hostname='dns.google.com'
     ,ca_file='/etc/ssl/certs/ca-certificates.crt'
  }

  ,{'1.1.1.1'
    , hostname="cloudflare-dns.com"
    , ca_file='/etc/knot-resolver/DigiCertECCSecureServerCA.pem'                                             
   }

  ,{'1.0.0.1'
    , hostname="cloudflare-dns.com"
  , ca_file='/etc/knot-resolver/DigiCertECCSecureServerCA.pem'                                                 
   }
  ,{ '9.9.9.9', hostname='dns.quad9.net'
     ,ca_file='/etc/ssl/certs/ca-certificates.crt'
   }
 })
 ))

-- prefetch learning, 20-m blocks over 24 hours
predict.config({ window = 20, period = 72})